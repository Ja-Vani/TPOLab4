plugins {
    id 'java'
    id 'pmd'
    id 'jacoco'
}

group 'ru.javani'
version '0.0.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.7'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.9.2")
    implementation 'org.seleniumhq.selenium:selenium-java:4.9.1'
    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'
    implementation('io.github.bonigarcia:webdrivermanager:5.3.1')
}

test {
    useJUnitPlatform()
    dependsOn pmdMain, pmdTest
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

pmd {
    consoleOutput = true
    toolVersion = "6.54.0"
    ruleSetFiles = files("config/pmd.xml") // Исключения только через внешний файл
    ruleSets = []
}

jacocoTestReport {
    reports {
        html.enabled true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
            ])
        }))
    }
}
jacocoTestCoverageVerification {
    dependsOn test
    violationRules {
        rule {
            limit {
                counter = 'CLASS'
                value = 'MISSEDCOUNT'
                maximum = 0
            }
        }
        rule {
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
        }
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
        }
        rule {
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
        }
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
            ])
        }))
    }
}
check.dependsOn jacocoTestReport, jacocoTestCoverageVerification